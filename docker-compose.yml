version: '3.8'

services:
  interface:
    container_name: rustobot-interface
    build:
      context: ./interface
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      CARGO_TERM_COLOR: always
    profiles:
      - development
      - production
      - test
    # The command use bash to verify the COMPOSE_PROFILES variable and run the appropriate command.
    command: bash -c '{ [ "$COMPOSE_PROFILES" = "production" ] && trunk --config Trunk.toml serve --release; } || { [ "$COMPOSE_PROFILES" = "development" ] && trunk --config Trunk.toml serve; }'

  server:
    container_name: rustobot-server
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8393:8393"
    environment:
      CARGO_TERM_COLOR: always
    profiles:
      - development
      - production
      - test
    # The command use bash to verify the COMPOSE_PROFILES variable and run the appropriate command.
    command: bash -c '{ [ "$COMPOSE_PROFILES" = "production" ] && cargo run --release; } || { [ "$COMPOSE_PROFILES" = "development" ] && cargo watch -w src -x '\''run'\''; }'

  database:
    container_name: rustobot-database
    image: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "rustobotdb"
    ports:
      - "5432:5432"
    profiles:
      - development
